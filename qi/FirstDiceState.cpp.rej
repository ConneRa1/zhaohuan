diff a/qi/FirstDiceState.cpp b/qi/FirstDiceState.cpp	(rejected hunks)
@@ -32,32 +32,6 @@
 }
 void FirstDiceState::Draw() {
     mGame->window.clear();//����
-    mGame->view.setSize(sf::Vector2f(mGame->window.getSize()));
-    mGame->view.setCenter(sf::Vector2f(mGame->window.getSize()) / 2.f);
-    mGame->window.setView(mGame->view);
-
-    mGame->backGround.sprite.setScale(mGame->view.getSize().x / windowWidth, mGame->view.getSize().y / windowHeight);
-    mGame->backGround.draw(mGame->window);
-
-    for (auto it = mGame->ui.begin(); it != mGame->ui.end(); it++) {
-        it->sprite.setScale(mGame->view.getSize().x / windowWidth, mGame->view.getSize().y / windowHeight);
-        it->draw(mGame->window);
-    }
-    for (auto it = mGame->characterVector.begin(); it != mGame->characterVector.end(); it++) {
-        it->draw(mGame->window, mGame->view.getSize().x / windowWidth * it->getScalex(), mGame->view.getSize().y / windowHeight * it->getScaley(), mGame->shader);
-    }
-    for (auto it = mGame->enemyVector.begin(); it != mGame->enemyVector.end(); it++) {
-        it->draw(mGame->window, mGame->view.getSize().x / windowWidth * it->getScalex(), mGame->view.getSize().y / windowHeight * it->getScaley(), mGame->shader);
-    }
-    for (auto it = mGame->dices.begin(); it != mGame->dices.end(); it++)
-    {
-        it->sprite.setScale(mGame->view.getSize().x / windowWidth * it->getScalex(), mGame->view.getSize().y / windowHeight * it->getScaley());
-        it->draw(mGame->window, mGame->shader);
-    }
-    int times = 0;
-    for (auto it = mGame->sAbility.begin(); it != mGame->sAbility.end(); it++) {
-        it->sprite.setScale(mGame->view.getSize().x / windowWidth, mGame->view.getSize().y / windowHeight);
-        it->draw(mGame->window);
-    }
+    State::Draw();
     mGame->window.display();//����ʾ�����������ݣ���ʾ����Ļ��
 }
\ No newline at end of file
